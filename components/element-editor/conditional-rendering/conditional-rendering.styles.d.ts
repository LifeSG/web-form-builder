/// <reference types="react" />
export declare const FieldWrapper: import("styled-components/dist/types").IStyledComponentBase<"web", import("styled-components").FastOmit<import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, never>> & string;
export declare const SelectFieldContainer: import("styled-components/dist/types").IStyledComponentBase<"web", import("styled-components").FastOmit<import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, never>> & string;
export declare const SelectFieldWrapper: import("styled-components/dist/types").IStyledComponentBase<"web", import("styled-components").FastOmit<import("@lifesg/react-design-system/form/types").FormInputSelectProps<unknown, unknown>, never>> & string & Omit<(<T, V>({ label, errorMessage, id, "data-error-testid": errorTestId, "data-testid": testId, enableSearch, layoutType, mobileCols, tabletCols, desktopCols, xxsCols, xsCols, smCols, mdCols, lgCols, xlCols, xxlCols, variant, ...otherProps }: import("@lifesg/react-design-system/form/types").FormInputSelectProps<T, V>) => JSX.Element), keyof import("react").Component<any, {}, any>>;
export declare const OptionIDText: import("styled-components/dist/types").IStyledComponentBase<"web", import("styled-components").FastOmit<import("styled-components").FastOmit<import("styled-components/dist/types").Substitute<import("styled-components/dist/types").Substitute<import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLParagraphElement>, HTMLParagraphElement>, Omit<import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLParagraphElement>, HTMLParagraphElement>, "ref"> & {
    ref?: import("react").RefObject<HTMLParagraphElement> | ((instance: HTMLParagraphElement) => void);
}>, import("@lifesg/react-design-system/typography").TypographyProps>, keyof import("@lifesg/react-design-system/typography").TypographyProps> & import("@lifesg/react-design-system/typography").TypographyProps, never>> & string;
